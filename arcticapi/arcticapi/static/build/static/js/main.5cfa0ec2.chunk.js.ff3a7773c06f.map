{"version":3,"sources":["context.js","header-container.js","left-container.js","right-container.js","footer-container.js","productcard.js","home.js","about.js","help.js","cart.js","checkout.js","receipt.js","detail.js","App.js","context-provider.js","serviceWorker.js","index.js","logo.svg"],"names":["AppContext","React","createContext","HeaderContainer","props","context","useContext","variant","expand","to","Brand","src","logo","className","alt","Toggle","aria-controls","Collapse","cartCount","title","alignRight","Item","Divider","href","LeftContainer","defaultActiveKey","products","length","categories","map","cat","id","key","filter","x","category","RightContainer","FooterContainer","Date","getFullYear","ProductCard","md","style","paddingLeft","paddingBottom","bg","width","height","Img","process","p","filename","toLowerCase","Body","Title","name","Text","price","top","right","Home","match","useRouteMatch","newObject","toString","params","push","fluid","noGutters","padding","sytle","fontSize","About","Help","Cart","total","Object","entries","cart","prod","idx","find","parseFloat","toFixed","onClick","removeFromCart","hidden","stripePromise","loadStripe","Checkout","stripe","CheckoutController","getCartTotal","useStripe","elements","useElements","history","useHistory","myError","initialValues","address1","address2","city","state","zipcode","validateOnChange","validateOnBlur","validate","values","errors","onSubmit","actions","a","axios","post","items","stripeResp","console","log","confirmCardPayment","data","payment_method","card","getElement","CardElement","billing_details","result","error","message","paymentIntent","status","clearCart","Promise","resolve","setTimeout","form","PaymentForm","Header","type","disabled","isSubmitting","as","animation","size","role","aria-hidden","Input","rProps","Group","Label","Control","placeholder","field","meta","touched","Receipt","Detail","product","useState","pic","setPic","description","addToCart","onMouseEnter","App","backgroundColor","path","AppProvider","setState","produce","draft","pid","cartTotal","this","Provider","value","get","resp","resp2","Component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"2UAGeA,EADIC,IAAMC,gB,qFCuCVC,MAnCf,SAA0BC,GACtB,IAAIC,EAAUJ,IAAMK,WAAWN,GAE/B,OACI,kBAAC,IAAD,CAAWO,QAAQ,OAAOC,OAAO,MAC7B,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAAC,IAAUC,MAAX,KACI,yBAAKC,IAAKC,IAAMC,UAAU,WAAWC,IAAI,cAD7C,WAKJ,kBAAC,IAAUC,OAAX,CAAkBC,gBAAc,qBAChC,kBAAC,IAAUC,SAAX,KACI,kBAAC,IAAD,CAAQJ,UAAU,WACd,kBAAC,IAAD,CAAMJ,GAAG,IAAII,UAAU,YAAvB,QACA,kBAAC,IAAD,CAAMJ,GAAG,SAASI,UAAU,YAA5B,SACA,kBAAC,IAAD,CAAMJ,GAAG,QAAQI,UAAU,YAA3B,SAEJ,kBAAC,IAAD,CAAMJ,GAAG,SACL,kBAAC,IAAUC,MAAX,KACI,uBAAGG,UAAU,6BACZR,EAAQa,YAGjB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBC,MAAM,iBAAiBC,YAAU,GAC7C,kBAAC,IAAeC,KAAhB,mBACA,kBAAC,IAAeC,QAAhB,MACA,kBAAC,IAAeD,KAAhB,CAAqBE,KAAK,eAA1B,eCKTC,MAjCf,SAAwBpB,GAcpB,IAAIC,EAAUJ,IAAMK,WAAWN,GAE/B,OACI,kBAAC,IAAD,KACI,uCACA,6BACA,kBAAC,IAAD,CAAQyB,iBAAiB,IAAIZ,UAAU,eACnC,kBAAC,IAAD,CAAMJ,GAAG,IAAII,UAAU,YAAvB,iBAAiDR,EAAQqB,SAASC,OAAlE,KAECtB,EAAQuB,WAAWC,KAAI,SAAAC,GAAG,OAEvB,kBAAC,IAAD,CAAMrB,GAAE,oBAAeqB,EAAIC,IAAMC,IAAKF,EAAIC,GAAIlB,UAAU,YAAYiB,EAAIX,MAAxE,KAAiFd,EAAQqB,SAASO,QAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAaL,EAAIC,MAAIJ,OAArI,WCpBLS,MARf,SAAyBhC,GACrB,OACI,kBAAC,IAAD,KACI,yCCIGiC,MAPf,SAA0BjC,GACtB,OACI,kBAAC,IAAD,KACI,4BAAQS,UAAU,eAAlB,oBAAmD,IAAIyB,MAAOC,iB,SCa3DC,MAdf,SAAsBpC,GAClB,OACI,kBAAC,IAAD,CAAQqC,GAAG,IAAIC,MAAO,CAACC,YAAa,OAAQC,cAAe,SACvD,kBAAC,IAAD,CAASC,GAAG,QAAQhC,UAAU,cAAc6B,MAAO,CAAEI,MAAO,QAASC,OAAQ,UACzE,kBAAC,IAAQC,IAAT,CAAazC,QAAQ,MAAMI,IAAG,UAAKsC,gBAAL,2BAA8C7C,EAAM8C,EAAEC,SAASC,cAA/D,YAC9B,kBAAC,IAAQC,KAAT,KACI,kBAAC,IAAQC,MAAT,KAAgBlD,EAAM8C,EAAEK,MACxB,kBAAC,IAAQC,KAAT,SAAgBpD,EAAM8C,EAAEO,OACxB,kBAAC,IAAD,CAAMhD,GAAE,mBAAcL,EAAM8C,EAAEnB,IAAMlB,UAAU,iCAAiC6B,MAAO,CAACgB,IAAK,EAAGC,MAAO,IAAtG,eCoCLC,MAzCf,SAAcxD,GACV,IAAIC,EAAUJ,IAAMK,WAAWN,GAE3B6D,EAAQC,YAAc,iBACtBC,EAAY,GAchB,OAba,MAATF,EACAxD,EAAQqB,SAASG,KAAI,SAACqB,GAIlB,OAHIA,EAAEf,SAAS6B,aAAeH,EAAMI,OAAOlC,IACvCgC,EAAUG,KAAKhB,GAEZa,KAIXA,EAAY1D,EAAQqB,SAKpB,kBAAC,IAAD,CAAcyC,OAAK,EAACtD,UAAU,OAC1B,kBAAC,IAAD,CAAQuD,WAAS,EAAC1B,MAAO,CAAE2B,QAAS,WAE/BN,EAAUlC,KAAI,SAACqB,GACZ,OACI,kBAAC,EAAD,CAAalB,IAAKkB,EAAEnB,GAAImB,EAAGA,QAMvC,kBAAC,IAAD,CAAQkB,WAAS,EAAC1B,MAAO,CAAE2B,QAAS,UAAYxD,UAAU,kBACtD,kBAAC,IAAD,KACI,yBAAKA,UAAU,8BAA8ByD,MAAO,CAAEC,SAAU,WAAhE,8FCfLC,MApBf,SAAepE,GACX,OACI,kBAAC,IAAD,CAAc+D,OAAK,EAACtD,UAAU,OAC1B,kBAAC,IAAD,CAAQuD,WAAS,EAAC1B,MAAO,CAAE2B,QAAS,WAChC,kBAAC,IAAD,KACI,wBAAIxD,UAAU,oBAAd,kBAIR,kBAAC,IAAD,CAAQuD,WAAS,EAAC1B,MAAO,CAAE2B,QAAS,UAAYxD,UAAU,kBACtD,kBAAC,IAAD,KACI,yBAAKA,UAAU,8BAA8ByD,MAAO,CAAEC,SAAU,WAAhE,weCSLE,MApBf,SAAcrE,GACV,OACI,kBAAC,IAAD,CAAc+D,OAAK,EAACtD,UAAU,OAC1B,kBAAC,IAAD,CAAQuD,WAAS,EAAC1B,MAAO,CAAE2B,QAAS,WAChC,kBAAC,IAAD,KACI,wBAAIxD,UAAU,oBAAd,sBAIR,kBAAC,IAAD,CAAQuD,WAAS,EAAC1B,MAAO,CAAE2B,QAAS,UAAYxD,UAAU,kBACtD,kBAAC,IAAD,KACI,yBAAKA,UAAU,8BAA8ByD,MAAO,CAAEC,SAAU,WAAhE,8F,QC2DLG,MArEf,SAActE,GACV,IAAIC,EAAUJ,IAAMK,WAAWN,GAC3B2E,EAAQ,EAQZ,OACI,kBAAC,IAAD,KACI,6BACI,wBAAI9D,UAAU,eAAd,iBACA,2BAAOA,UAAU,SACb,+BACI,4BACI,6BACA,uCACA,wCACA,qCACA,wCACA,+BAGR,+BACK+D,OAAOC,QAAQxE,EAAQyE,MAAMjD,KAAI,YAAkB,IAAD,mBAAfkD,EAAe,KAATC,EAAS,KAE3C9B,EAAI,GAMR,OALAA,EAAI7C,EAAQqB,SAASuD,MAAK,SAAA/C,GAAC,OAAIA,EAAEH,GAAGiC,aAAee,KAGnDJ,EAAQO,WAAWP,GAASO,WAAWhC,EAAEO,MAAQuB,GAG7C,wBAAIhD,IAAKkB,EAAEnB,IACP,4BACI,yBAAKpB,IAAG,UAAKsC,gBAAL,2BAA8CC,EAAEC,SAASC,cAAzD,UAAgFtC,IAAG,UAAKoC,EAAEK,MAAQb,MAAO,CAAEK,OAAQ,QAASD,MAAO,YAE/I,4BAAKI,EAAEK,MACP,4BAAKyB,GACL,gCAAM9B,EAAEO,OACR,iCAAOP,EAAEO,MAAQuB,GAAKG,QAAQ,IAC9B,4BACI,kBAAC,IAAD,CAAWC,QAAS,kBAAM/E,EAAQgF,eAAenC,EAAEnB,KAAKxB,QAAQ,gBAAhE,gBAMpB,+BACI,4BACI,6BACA,6BACA,qCACA,6BACA,gCAAMoE,EAAMQ,QAAQ,IACpB,iCAKhB,kBAAC,IAAD,CAActE,UAAU,eACpB,uBAAGA,UAAU,cAAcyE,OAAQjF,EAAQa,UAAY,GAAvD,sCACA,kBAAC,IAAD,CAAMT,GAAE,YAAeI,UAAU,mBAAmByE,OAA8B,IAAtBjF,EAAQa,WAApE,e,0CC5DVqE,EAAgBC,YAAW,8CAWlBC,MARf,SAAkBrF,GAEd,OACI,kBAAC,WAAD,CAAUsF,OAAQH,GACd,kBAAC,EAAD,QAONI,EAAqB,SAAAvF,GACvB,IAAIC,EAAUJ,IAAMK,WAAWN,GACzB2E,EAAQtE,EAAQuF,eAChBF,EAASG,sBACTC,EAAWC,wBACXC,EAAUC,cAEZC,EAAU,GAEd,OACI,kBAAC,IAAD,CACIC,cAAe,CACX5C,KAAM,aACN6C,SAAU,OACVC,SAAU,OACVC,KAAM,QACNC,MAAO,KACPC,QAAS,SAEbC,kBAAkB,EAClBC,gBAAgB,EAChBC,SAAU,SAAAC,GACN,IAAMC,EAAS,GAiBf,MAfoB,KAAhBD,EAAOrD,OACPsD,EAAOtD,KAAO,2BAEM,KAApBqD,EAAOR,WACPS,EAAOT,SAAW,8BAEF,KAAhBQ,EAAON,OACPO,EAAOP,KAAO,2BAEG,KAAjBM,EAAOL,QACPM,EAAON,MAAQ,4BAEI,KAAnBK,EAAOJ,UACPK,EAAOL,QAAU,8BAEdK,GAEXC,SAAQ,uCAAE,WAAOF,EAAQG,GAAf,iBAAAC,EAAA,+EAKiBC,IAAMC,KAAK,aAAc,CACxC3D,KAAMqD,EAAOrD,KACb6C,SAAUQ,EAAOR,SACjBC,SAAUO,EAAOP,SACjBC,KAAMM,EAAON,KACbC,MAAOK,EAAOL,MACdC,QAASI,EAAOJ,QAChB7B,MAAOtE,EAAQuF,eACfuB,MAAO9G,EAAQyE,OAbjB,OAKFsC,EALE,uDAgBFC,QAAQC,IAAR,MACApB,EAAU,mCAjBR,yBAqBeR,EAAO6B,mBAAmBH,EAAWI,KAAX,cAAkC,CAC7EC,eAAgB,CACZC,KAAM5B,EAAS6B,WAAWC,eAC1BC,gBAAiB,CACbtE,KAAMqD,EAAOrD,SAzBnB,eAqBAuE,EArBA,QA+BKC,MAIX7B,EAAU4B,EAAOC,MAAMC,QAIiB,cAAhCF,EAAOG,cAAcC,SAErB7H,EAAQ8H,YACRnC,EAAQ9B,KAAK,aA1Cf,UA8CA,IAAIkE,SAAQ,SAAAC,GACdC,YAAW,WACPD,MACD,QAjDD,yDAAF,0DAqDV,SAAAE,GAAI,OACF,kBAAC,EAAD,CAAaA,KAAMA,EAAM5D,MAAOA,EAAOoD,MAAO7B,QAUpDsC,EAAc,SAAApI,GAAK,OACrB,kBAAC,IAAD,KACI,wCACA,6BACA,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQqC,GAAG,KACP,kBAAC,IAAD,KACI,kBAAC,IAAQgG,OAAT,KACI,yCAEJ,kBAAC,IAAQpF,KAAT,KACI,kBAAC,EAAD,CAAOlC,MAAM,QAAQoC,KAAK,OAAOmF,KAAK,SACtC,kBAAC,EAAD,CAAOvH,MAAM,aAAaoC,KAAK,WAAWmF,KAAK,SAC/C,kBAAC,EAAD,CAAOvH,MAAM,aAAaoC,KAAK,WAAWmF,KAAK,SAC/C,kBAAC,EAAD,CAAOvH,MAAM,QAAQoC,KAAK,OAAOmF,KAAK,SACtC,kBAAC,EAAD,CAAOvH,MAAM,SAASoC,KAAK,QAAQmF,KAAK,SACxC,kBAAC,EAAD,CAAOvH,MAAM,OAAOoC,KAAK,UAAUmF,KAAK,YAIpD,kBAAC,IAAD,CAAQjG,GAAG,KACP,kBAAC,IAAD,KACI,kBAAC,IAAQgG,OAAT,KACI,wCAEJ,kBAAC,IAAQpF,KAAT,KACI,wBAAIxC,UAAU,eAAeT,EAAM2H,OACnC,kBAAC,cAAD,QAGR,6BACA,wDAA6B,oCAAU3H,EAAMuE,MAAMQ,QAAQ,KAC3D,6BACA,kBAAC,IAAD,CAActE,UAAU,eACpB,kBAAC,IAAD,CAAWA,UAAU,eAAe6H,KAAK,SAASC,SAAUvI,EAAMmI,KAAKK,cAClExI,EAAMmI,KAAKK,cACR,kBAAC,IAAD,CAAYC,GAAG,OAAOC,UAAU,SAASC,KAAK,KAAKC,KAAK,SAASC,cAAY,SAFrF,mBAqBlBC,EAAQ,SAAC9I,GAAD,OACV,kBAAC,IAAD,CAAOmD,KAAMnD,EAAMmD,OAAO,SAAA4F,GAAM,OAC5B,kBAAC,IAAQC,MAAT,KACKhJ,EAAMe,OACH,kBAAC,IAAQkI,MAAT,KAAgBjJ,EAAMe,OAE1B,kBAAC,IAAQmI,QAAT,eACIZ,KAAMtI,EAAMsI,KACZa,YAAanJ,EAAMmJ,YACnBZ,SAAUQ,EAAOZ,KAAKK,cAClBO,EAAOK,QAEdL,EAAOM,KAAKC,SAAWP,EAAOM,KAAK1B,OAChC,yBAAKlH,UAAU,eAAesI,EAAOM,KAAK1B,YC1L3C4B,MARf,WACI,OACI,kBAAC,IAAD,CAAc9I,UAAU,eACpB,yCACA,kBAAC,IAAD,CAAMJ,GAAE,IAAOI,UAAU,gBAAzB,oB,OCiEG+I,MAnEf,SAAgBxJ,GACZ,IAAIC,EAAUJ,IAAMK,WAAWN,GAC3B6D,EAAQC,YAAc,gBAEtB+F,EAAU,GACdA,EAAUxJ,EAAQqB,SAASuD,MAAK,SAAA/C,GAAC,OAAIA,EAAEH,GAAGiC,aAAeH,EAAMI,OAAOlC,MALnD,MAMC+H,mBAAS,MANV,mBAMdC,EANc,KAMTC,EANS,KAQnB,OAAKH,EAUG,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQnH,MAAO,CAAE2B,QAAS,WACtB,kBAAC,IAAD,CAAQ5B,GAAG,KACP,4BAAKoH,EAAQtG,MACb,gCAAMsG,EAAQpG,OACd,2BAAIoG,EAAQI,cAEhB,kBAAC,IAAD,CAAQxH,GAAG,KACP,yBAAK9B,IAAG,UAAKsC,gBAAL,2BAA8C4G,EAAQ1G,SAASC,eAA/D,OAA+E2G,EAA/E,QAA0FjJ,IAAG,UAAK+I,EAAQtG,MAAQb,MAAO,CAAEK,OAAQ,QAASD,MAAO,aAGnK,kBAAC,IAAD,CAAQJ,MAAO,CAAE2B,QAAS,WACtB,kBAAC,IAAD,CAAQ5B,GAAG,KACX,kBAAC,IAAD,CAAMhC,GAAE,IAAOI,UAAU,oBAAzB,gBACA,kBAAC,IAAD,CAAMJ,GAAE,QAAW2E,QAAS,kBAAM/E,EAAQ6J,UAAUL,EAAQ9H,KAAKlB,UAAU,gBAA3E,gBAEA,kBAAC,IAAD,CAAQ4B,GAAG,KACP,yBACI0H,aAAc,kBAAMH,EAAO,OAC3BrJ,IAAG,UAAKsC,gBAAL,2BAA8C4G,EAAQ1G,SAASC,cAA/D,UACHtC,IAAG,UAAK+I,EAAQtG,MAChBb,MAAO,CAAEK,OAAQ,OAAQD,MAAO,UALxC,QAOI,yBACIqH,aAAc,kBAAMH,EAAO,OAC3BrJ,IAAG,UAAKsC,gBAAL,2BAA8C4G,EAAQ1G,SAASC,cAA/D,UACHtC,IAAG,UAAK+I,EAAQtG,KAAb,KACHb,MAAO,CAAEK,OAAQ,OAAQD,MAAO,UAXxC,QAaI,yBACIqH,aAAc,kBAAMH,EAAO,OAC3BrJ,IAAG,UAAKsC,gBAAL,2BAA8C4G,EAAQ1G,SAASC,cAA/D,UACHtC,IAAG,UAAK+I,EAAQtG,KAAb,KACHb,MAAO,CAAEK,OAAQ,OAAQD,MAAO,UAjBxC,QAmBI,yBACIqH,aAAc,kBAAMH,EAAO,OAC3BrJ,IAAG,UAAKsC,gBAAL,2BAA8C4G,EAAQ1G,SAASC,cAA/D,UACHtC,IAAG,UAAK+I,EAAQtG,KAAb,KACHb,MAAO,CAAEK,OAAQ,OAAQD,MAAO,aA/ChD,kBAAC,IAAD,CAAcjC,UAAU,cAAc6B,MAAO,CAAE2B,QAAS,WACpD,2CCmDD+F,MApDf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcjG,OAAK,EAACtD,UAAU,qCAC5B,kBAAC,IAAD,CAAQuD,WAAS,EAACvD,UAAU,uCAC1B,kBAAC,IAAD,CAAQA,UAAU,YAAY6B,MAAO,CAAE2H,gBAAiB,YACtD,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAQjG,WAAS,EAACvD,UAAU,eAC1B,kBAAC,IAAD,CAAQ4B,GAAG,IAAI5B,UAAU,mBAAmB6B,MAAO,CAAE2H,gBAAiB,YACpE,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAQ5H,GAAG,KACT,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6H,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,SAIN,kBAAC,IAAD,CAAQ7H,GAAG,IAAI5B,UAAU,mBAAmB6B,MAAO,CAAE2H,gBAAiB,YACpE,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CAAQjG,WAAS,EAACvD,UAAU,6BAC1B,kBAAC,IAAD,CAAQA,UAAU,YAAY6B,MAAO,CAAE2H,gBAAiB,YACtD,kBAAC,EAAD,W,QCrDSE,G,kDAEjB,WAAYnK,GAAQ,IAAD,8BACf,cAAMA,IA6BV+H,UAAY,WACR,EAAKqC,UAAS,SAAAjE,GAAK,OAAIkE,YAAQlE,GAAO,SAAAmE,GAClCA,EAAM5F,KAAO,GACb4F,EAAMxJ,UAAY,SAjCP,EAqCnBgJ,UAAY,SAACS,GAGT,EAAKH,UAAS,SAAAjE,GAAK,OAAIkE,YAAQlE,GAAO,SAAAmE,GAC9BC,KAAOD,EAAM5F,KACb4F,EAAM5F,KAAK6F,KAGXD,EAAM5F,KAAK6F,GAAO,EAEtBD,EAAMxJ,mBA/CK,EAmDnBmE,eAAiB,SAACsF,GACd,EAAKH,UAAS,SAAAjE,GAAK,OAAIkE,YAAQlE,GAAO,SAAAmE,GAIlC,IAAK,IAAMxH,YAHJwH,EAAM5F,KAAK6F,GAElBD,EAAMxJ,UAAY,EACFwJ,EAAM5F,KAAM,CAEhB5B,EACRwH,EAAMxJ,oBAzDd,EAAK6F,QAAU,CAEXmD,UAAW,EAAKA,UAChB7E,eAAgB,EAAKA,eACrBO,aAAc,EAAKA,aACnBuC,UAAW,EAAKA,WAEpB,EAAK5B,MAAQ,CACT3E,WAAY,GACZF,SAAU,GACVoD,KAAM,GACN5D,UAAW,GAbA,E,2DAkBH,IAAD,OACP0J,EAAY,EAQhB,OAPAhG,OAAOC,QAAQgG,KAAK/F,MAAMjD,KAAI,YAAkB,IACxCqB,EADuC,mBAAf6B,EAAe,KAATC,EAAS,KAI3C,OAFA9B,EAAI,EAAKxB,SAASuD,MAAK,SAAA/C,GAAC,OAAIA,EAAEH,GAAGiC,aAAee,KAEzC6F,GAAyB1H,EAAEO,MAAQuB,KAGvC4F,I,+BAsCP,OACI,kBAAC,EAAWE,SAAZ,CAAqBC,MAAK,eAAMF,KAAKtE,MAAX,GAAqBsE,KAAK9D,UAChD,kBAAC,EAAD,S,4KAMWE,IAAM+D,IAAI,kB,cAAvBC,E,gBASchE,IAAM+D,IAAI,iB,OAAxBE,E,OASNL,KAAKL,SAAS,CACV5I,WAAYqJ,EAAKzD,KAEjB9F,SAAUwJ,EAAM1D,O,2GAhGavH,IAAMkL,WCK3BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1H,MACvB,2DCVN2H,IAASC,OAAO,kBAAC,GAAD,MAAiBC,SAASC,eAAe,SD2HnD,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,mBErInBC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.5cfa0ec2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AppContext = React.createContext()\r\nexport default AppContext","import React from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from './logo.svg'\r\nimport AppContext from './context'\r\n\r\nfunction HeaderContainer (props) {\r\n    let context = React.useContext(AppContext)\r\n\r\n    return (\r\n        <bs.Navbar variant=\"dark\" expand=\"lg\">\r\n            <Link to=\"/\">\r\n                <bs.Navbar.Brand>\r\n                    <img src={logo} className=\"App-logo\" alt=\"Site Icon\" />\r\n                    Arctic\r\n                </bs.Navbar.Brand>\r\n            </Link>\r\n            <bs.Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <bs.Navbar.Collapse>\r\n                <bs.Nav className=\"mr-auto\">\r\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                    <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n                    <Link to=\"/help\" className=\"nav-link\">Help</Link>\r\n                </bs.Nav>\r\n                <Link to=\"/cart\">\r\n                    <bs.Navbar.Brand>\r\n                        <i className=\"fas fa-shopping-cart m-2\"></i>\r\n                        {context.cartCount}\r\n                    </bs.Navbar.Brand>\r\n                </Link>\r\n                <bs.Nav>\r\n                    <bs.NavDropdown title=\"Welcome, Chris\" alignRight>\r\n                        <bs.NavDropdown.Item>My Account</bs.NavDropdown.Item>\r\n                        <bs.NavDropdown.Divider />\r\n                        <bs.NavDropdown.Item href=\"#action/3.4\">Logout</bs.NavDropdown.Item>\r\n                    </bs.NavDropdown>\r\n                </bs.Nav>\r\n            </bs.Navbar.Collapse>\r\n        </bs.Navbar>\r\n    )\r\n}\r\nexport default HeaderContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n//import PRODUCTS from './products'\r\nimport AppContext from './context'\r\n\r\nfunction LeftContainer (props) {\r\n\r\n    // This is the OLD way.\r\n        // const categories = {}\r\n        // let count = 0\r\n\r\n        // for (const p of Object.values(PRODUCTS)) {\r\n            \r\n        //     categories[p.category] = (categories[p.category] || 0) + 1\r\n        //     count++\r\n        // }\r\n    \r\n        // console.log(categories)\r\n    \r\n    let context = React.useContext(AppContext)    \r\n\r\n    return (\r\n        <bs.Container>\r\n            <h2>Filters</h2>\r\n            <hr />            \r\n            <bs.Nav defaultActiveKey=\"/\" className=\"flex-column\">\r\n                <Link to=\"/\" className=\"nav-link\">All Products ({context.products.length})</Link>\r\n                \r\n                {context.categories.map(cat => (\r\n                    \r\n                    <Link to={`/category/${cat.id}`} key={cat.id} className=\"nav-link\">{cat.title} ({context.products.filter(x => x.category === cat.id).length})</Link>\r\n                                            \r\n                ))}\r\n                \r\n            </bs.Nav>\r\n        </bs.Container>  \r\n    )\r\n}\r\nexport default LeftContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction RightContainer (props) {\r\n    return (\r\n        <bs.Container>\r\n            <h2>Recent:</h2>            \r\n            \r\n        </bs.Container>\r\n    )\r\n}\r\nexport default RightContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction FooterContainer (props) {\r\n    return (\r\n        <bs.Container>\r\n            <footer className=\"text-center\">Arctic.com &copy; {new Date().getFullYear()}</footer>            \r\n        </bs.Container>\r\n    )\r\n}\r\nexport default FooterContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction ProductCard (props) {\r\n    return(\r\n        <bs.Col md=\"3\" style={{paddingLeft: '2rem', paddingBottom: '2rem'}}>                    \r\n            <bs.Card bg=\"light\" className=\"text-center\" style={{ width: '12rem', height: '18rem' }}>\r\n                <bs.Card.Img variant=\"top\" src={`${process.env.PUBLIC_URL}/media/products/${props.p.filename.toLowerCase()}-1.png`}/>\r\n                <bs.Card.Body >\r\n                    <bs.Card.Title>{props.p.name}</bs.Card.Title>\r\n                    <bs.Card.Text>${props.p.price}</bs.Card.Text>\r\n                    <Link to={`/product/${props.p.id}`} className=\"btn btn-dark position-absolute\" style={{top: 0, right: 0}}>Details</Link>\r\n                </bs.Card.Body>\r\n            </bs.Card>                                      \r\n        </bs.Col>\r\n    )\r\n}\r\nexport default ProductCard\r\n","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n//import PRODUCTS from './products'\r\nimport ProductCard from './productcard'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\n\r\nfunction Home(props) {    \r\n    let context = React.useContext(AppContext)\r\n    \r\n    let match = useRouteMatch('/category/:id')\r\n    let newObject = []\r\n    if (match != null) {\r\n        context.products.map((p) => {\r\n            if (p.category.toString() === match.params.id) {\r\n                newObject.push(p)\r\n            }\r\n            return newObject\r\n        })\r\n    }\r\n    else {\r\n        newObject = context.products\r\n    }\r\n    \r\n        \r\n    return (\r\n        <bs.Container fluid className=\"p-0\">            \r\n            <bs.Row noGutters style={{ padding: \"2rem 0\"}}>\r\n                \r\n                {newObject.map((p) => {\r\n                    return (\r\n                        <ProductCard key={p.id} p={p}/>                        \r\n                    )                    \r\n                })}                \r\n\r\n            </bs.Row>\r\n\r\n            <bs.Row noGutters style={{ padding: \"4rem 0\" }} className=\"bg-info shadow\">\r\n                <bs.Col>\r\n                    <div className=\"px-5 text-center text-white\" sytle={{ fontSize: \"1.5rem\" }}>\r\n                        Et incididunt duis fugiat consequat et duis eiusmod nostrud ex aliquip pariatur irure.\r\n                    </div>\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n        \r\n    )\r\n}\r\nexport default Home","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\n\r\n\r\nfunction About(props) {\r\n    return (\r\n        <bs.Container fluid className=\"p-0\">\r\n            <bs.Row noGutters style={{ padding: \"6rem 0\"}}>\r\n                <bs.Col>\r\n                    <h1 className=\"text-center mt-5\">About Arctic</h1>\r\n                </bs.Col>\r\n            </bs.Row>\r\n\r\n            <bs.Row noGutters style={{ padding: \"4rem 0\" }} className=\"bg-info shadow\">\r\n                <bs.Col>\r\n                    <div className=\"px-5 text-center text-white\" sytle={{ fontSize: \"1.5rem\" }}>\r\n                        Culpa commodo irure nulla est qui aute. Sint nisi ex in proident adipisicing aliqua incididunt irure veniam eu commodo. Tempor fugiat Lorem non sint voluptate ullamco ut occaecat eu qui irure laboris do aliquip. Do ex consectetur nulla consequat ut incididunt ipsum incididunt amet occaecat. Sint eu consectetur nostrud ea cillum pariatur sint anim laboris pariatur magna amet aute. Mollit aliqua sint in aliquip adipisicing laboris consectetur velit. Quis ea eiusmod Lorem dolor.\r\n                    </div>\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n        \r\n    )\r\n}\r\nexport default About","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\n\r\n\r\nfunction Help(props) {\r\n    return (\r\n        <bs.Container fluid className=\"p-0\">\r\n            <bs.Row noGutters style={{ padding: \"6rem 0\"}}>\r\n                <bs.Col>                   \r\n                    <h1 className=\"text-center mt-5\">Arctic Help Page</h1>\r\n                </bs.Col>\r\n            </bs.Row>\r\n\r\n            <bs.Row noGutters style={{ padding: \"4rem 0\" }} className=\"bg-info shadow\">\r\n                <bs.Col>\r\n                    <div className=\"px-5 text-center text-white\" sytle={{ fontSize: \"1.5rem\" }}>\r\n                        Et incididunt duis fugiat consequat et duis eiusmod nostrud ex aliquip pariatur irure.\r\n                    </div>\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n        \r\n    )\r\n}\r\nexport default Help","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n//import { useRouteMatch } from 'react-router-dom'\r\nimport AppContext from './context'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Cart(props) {\r\n    let context = React.useContext(AppContext)\r\n    let total = 0 //parseInt('0.00').toFixed(2)\r\n\r\n    //console.log(context.cart)\r\n    //console.log(context.cartCount)\r\n\r\n    //if (Object.keys(context.cart).length === 0)\r\n\r\n    \r\n    return(\r\n        <bs.Container>\r\n            <div>\r\n                <h1 className='text-center'>Shopping Cart</h1>\r\n                <table className='table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th>Product</th>\r\n                            <th>Quantity</th>\r\n                            <th>Price</th>\r\n                            <th>Extended</th>\r\n                            <th></th>                        \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Object.entries(context.cart).map(([prod, idx]) => {\r\n                            \r\n                            let p = []\r\n                            p = context.products.find(x => x.id.toString() === prod)\r\n                            //console.log(p)\r\n\r\n                            total = parseFloat(total) + parseFloat(p.price * idx)\r\n                            \r\n                            return (\r\n                                <tr key={p.id}>\r\n                                    <td>\r\n                                        <img src={`${process.env.PUBLIC_URL}/media/products/${p.filename.toLowerCase()}-1.png`} alt={`${p.name}`} style={{ height: \"100px\", width: \"100px\"}}></img>\r\n                                    </td>\r\n                                    <td>{p.name}</td>\r\n                                    <td>{idx}</td>\r\n                                    <td>${p.price}</td>\r\n                                    <td>${(p.price * idx).toFixed(2)}</td>\r\n                                    <td>\r\n                                        <bs.Button onClick={() => context.removeFromCart(p.id)} variant=\"outline-dark\">Remove</bs.Button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th></th>\r\n                            <th>Total</th>\r\n                            <th></th>\r\n                            <th>${total.toFixed(2)}</th>\r\n                            <th></th>\r\n                        </tr>                        \r\n                    </thead>\r\n                </table>\r\n            </div>\r\n            <bs.Container className=\"text-center\">\r\n                <p className=\"text-danger\" hidden={context.cartCount > 0}>Must Add Items to Cart to Checkout</p>\r\n                <Link to={`/checkout`} className=\"btn btn-dark m-2\" hidden={context.cartCount === 0}>Checkout</Link>\r\n            </bs.Container>                   \r\n        </bs.Container>\r\n    )    \r\n}\r\nexport default Cart","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Formik, Form, Field} from 'formik'\r\nimport AppContext from './context'\r\nimport axios from 'axios'\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\n\r\n\r\nconst stripePromise = loadStripe('pk_test_sV16xwnfiCbkbdePDoXKK7hK00j0QWJC96')\r\n\r\n\r\nfunction Checkout(props) {\r\n    // we'll add Stripe's Elements component here later\r\n    return (\r\n        <Elements stripe={stripePromise}>\r\n            <CheckoutController />\r\n        </Elements>        \r\n    )\r\n}\r\nexport default Checkout\r\n\r\n\r\nconst CheckoutController = props => {\r\n    let context = React.useContext(AppContext)\r\n    const total = context.getCartTotal() \r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const history = useHistory()\r\n\r\n    let myError = ''\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                name: 'Conrad Fox',\r\n                address1: '1234',\r\n                address2: '5678',\r\n                city: 'Provo',\r\n                state: 'UT',\r\n                zipcode: '84602',\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n                //console.log('validating', values) // This is not the way\r\n                if (values.name === '') {\r\n                    errors.name = 'Please enter valid name'\r\n                }\r\n                if (values.address1 === '') {\r\n                    errors.address1 = 'Please enter valid address'\r\n                }\r\n                if (values.city === '') {\r\n                    errors.city = 'Please enter valid City'\r\n                }\r\n                if (values.state === '') {\r\n                    errors.state = 'Please enter valid State'\r\n                }\r\n                if (values.zipcode === '') {\r\n                    errors.zipcode = 'Please enter valid zipcode'\r\n                }\r\n                return errors // This is the way\r\n            }}\r\n            onSubmit={async (values, actions) => {\r\n                // console.log('submit', values)\r\n                // Put axios call to API here:\r\n                let stripeResp\r\n                try {\r\n                    stripeResp = await axios.post('/api/sale/', {\r\n                        name: values.name,\r\n                        address1: values.address1,\r\n                        address2: values.address2,\r\n                        city: values.city,\r\n                        state: values.state,\r\n                        zipcode: values.zipcode,\r\n                        total: context.getCartTotal(),\r\n                        items: context.cart,                    \r\n                    })\r\n                } catch(err) {\r\n                    console.log(err)\r\n                    myError = 'Please Enter a Valid Card Number'\r\n                }              \r\n                //console.log(stripeResp.data)\r\n                \r\n                const result = await stripe.confirmCardPayment(stripeResp.data['client_secret'], {\r\n                    payment_method: {\r\n                        card: elements.getElement(CardElement),\r\n                        billing_details: {\r\n                            name: values.name,\r\n                        },\r\n                    }\r\n                })\r\n                //console.log(result)\r\n\r\n                if (result.error) {\r\n                // Show error to your customer (e.g., insufficient funds)\r\n                //alert(result.error.message)\r\n                //console.log(result.error.message)\r\n                myError = result.error.message                \r\n                } \r\n                else {\r\n                    // The payment has been processed!\r\n                    if (result.paymentIntent.status === 'succeeded') {\r\n                        // Show a success message to your customer\r\n                        context.clearCart()\r\n                        history.push('/receipt')\r\n                    }\r\n                }\r\n\r\n                await new Promise(resolve => {\r\n                    setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\r\n                        resolve()\r\n                    }, 2000)\r\n                })\r\n                //console.log('after the 2 seconds')\r\n            }}\r\n        >{form => (\r\n            <PaymentForm form={form} total={total} error={myError}/>            \r\n        )}</Formik>\r\n    )\r\n}\r\n\r\n\r\n/**\r\n * The form layout/html.\r\n * This component needs finishing.\r\n */\r\nconst PaymentForm = props => (\r\n    <bs.Container>\r\n        <h1>Checkout</h1>\r\n        <br />                   \r\n        <Form>\r\n            <bs.Row>\r\n                <bs.Col md=\"6\">\r\n                    <bs.Card>\r\n                        <bs.Card.Header>\r\n                            <h3>Shipping</h3>\r\n                        </bs.Card.Header>\r\n                        <bs.Card.Body>\r\n                            <Input title=\"Name:\" name=\"name\" type=\"text\" />\r\n                            <Input title=\"Address 1:\" name=\"address1\" type=\"text\" />\r\n                            <Input title=\"Address 2:\" name=\"address2\" type=\"text\" />\r\n                            <Input title=\"City:\" name=\"city\" type=\"text\" />\r\n                            <Input title=\"State:\" name=\"state\" type=\"text\" />\r\n                            <Input title=\"Zip:\" name=\"zipcode\" type=\"text\" />\r\n                        </bs.Card.Body>\r\n                    </bs.Card>\r\n                </bs.Col>\r\n                <bs.Col md=\"6\">\r\n                    <bs.Card>\r\n                        <bs.Card.Header>\r\n                            <h3>Payment</h3>\r\n                        </bs.Card.Header>\r\n                        <bs.Card.Body>\r\n                            <h6 className=\"text-danger\">{props.error}</h6>                            \r\n                            <CardElement />                                                        \r\n                        </bs.Card.Body>\r\n                    </bs.Card>\r\n                    <br/>\r\n                    <p>Your Card will be charged <strong>${props.total.toFixed(2)}</strong></p>\r\n                    <br/> \r\n                    <bs.Container className=\"text-center\">                 \r\n                        <bs.Button className=\"btn btn-dark\" type=\"submit\" disabled={props.form.isSubmitting}>\r\n                            {props.form.isSubmitting &&\r\n                                <bs.Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />                                \r\n                            } Purchase\r\n                        </bs.Button>\r\n                    </bs.Container> \r\n                </bs.Col>\r\n            </bs.Row>\r\n        </Form>       \r\n    </bs.Container>\r\n    \r\n)\r\n\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={rProps.form.isSubmitting}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Receipt() {\r\n    return(\r\n        <bs.Container className=\"text-center\">\r\n            <h1>Thank You</h1>\r\n            <Link to={`/`} className=\"btn btn-dark\">Return to Home</Link>\r\n        </bs.Container>\r\n    )\r\n}\r\nexport default Receipt","import React, { useState } from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n//import PRODUCTS from './products'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport AppContext from './context'\r\n\r\nfunction Detail(props) {\r\n    let context = React.useContext(AppContext)\r\n    let match = useRouteMatch('/product/:id')\r\n\r\n    let product = []\r\n    product = context.products.find(x => x.id.toString() === match.params.id)\r\n    let [pic, setPic] = useState(`-1`)\r\n\r\n    if (!product) {\r\n        return (\r\n            <bs.Container className=\"text-center\" style={{ padding: \"3rem 0\"}}>\r\n                <h1>Not Found</h1>\r\n            </bs.Container>            \r\n        )\r\n    }\r\n    else {\r\n        return (\r\n        \r\n            <bs.Container>            \r\n                <bs.Row style={{ padding: \"3rem 0\"}}>\r\n                    <bs.Col md='8'>\r\n                        <h1>{product.name}</h1>\r\n                        <h2>${product.price}</h2>\r\n                        <p>{product.description}</p>\r\n                    </bs.Col>\r\n                    <bs.Col md='4'>\r\n                        <img src={`${process.env.PUBLIC_URL}/media/products/${product.filename.toLowerCase()}${pic}.png`} alt={`${product.name}`} style={{ height: \"300px\", width: \"300px\"}}></img>\r\n                    </bs.Col>\r\n                </bs.Row>\r\n                <bs.Row style={{ padding: \"0rem 0\"}}>\r\n                    <bs.Col md='8'>\r\n                    <Link to={`/`} className=\"btn btn-dark m-2\">Back to List</Link>                \r\n                    <Link to={`/cart`} onClick={() => context.addToCart(product.id)} className=\"btn btn-dark\">Add to Cart</Link>\r\n                    </bs.Col>\r\n                    <bs.Col md='4'>\r\n                        <img \r\n                            onMouseEnter={() => setPic(`-1`)} \r\n                            src={`${process.env.PUBLIC_URL}/media/products/${product.filename.toLowerCase()}-1.png`} \r\n                            alt={`${product.name}`} \r\n                            style={{ height: \"30px\", width: \"30px\"}}>\r\n                        </img> &nbsp;\r\n                        <img \r\n                            onMouseEnter={() => setPic(`-2`)}\r\n                            src={`${process.env.PUBLIC_URL}/media/products/${product.filename.toLowerCase()}-2.png`} \r\n                            alt={`${product.name}2`} \r\n                            style={{ height: \"30px\", width: \"30px\"}}>\r\n                        </img> &nbsp;\r\n                        <img \r\n                            onMouseEnter={() => setPic(`-3`)}\r\n                            src={`${process.env.PUBLIC_URL}/media/products/${product.filename.toLowerCase()}-3.png`} \r\n                            alt={`${product.name}3`} \r\n                            style={{ height: \"30px\", width: \"30px\"}}>\r\n                        </img> &nbsp;\r\n                        <img \r\n                            onMouseEnter={() => setPic(`-4`)}\r\n                            src={`${process.env.PUBLIC_URL}/media/products/${product.filename.toLowerCase()}-4.png`} \r\n                            alt={`${product.name}4`} \r\n                            style={{ height: \"30px\", width: \"30px\"}}>\r\n                        </img>\r\n                    </bs.Col>\r\n                </bs.Row>\r\n            </bs.Container>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\nexport default Detail","import React from 'react'\nimport * as bs from 'react-bootstrap'\nimport { BrowserRouter as Router, Switch, Route, } from \"react-router-dom\"\nimport HeaderContainer from \"./header-container.js\"\nimport LeftContainer from \"./left-container\"\nimport RightContainer from \"./right-container\"\nimport FooterContainer from \"./footer-container\"\nimport Home from \"./home\"\nimport About from \"./about\"\nimport Help from \"./help\"\nimport Cart from \"./cart\"\nimport Checkout from \"./checkout\"\nimport Receipt from \"./receipt\"\nimport './App.css';\nimport Detail from './detail.js';\n\nfunction App() {\n  return (\n    <Router>\n      <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 shadow-sm\">\n          <bs.Col className=\"px-3 py-2\" style={{ backgroundColor: \"#121C1C\"}}>\n            <HeaderContainer />\n          </bs.Col>\n        </bs.Row>\n        <bs.Row noGutters className=\"flex-grow-1\">\n          <bs.Col md=\"2\" className=\"px-3 py-4 shadow\" style={{ backgroundColor: \"#99CCCC\"}}>\n            <LeftContainer />\n          </bs.Col>\n          <bs.Col md=\"8\">\n            <Switch>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n              <Route path=\"/help\">\n                <Help />\n              </Route>\n              <Route path=\"/cart\">\n                <Cart />\n              </Route>\n              <Route path=\"/checkout\">\n                <Checkout />\n              </Route>\n              <Route path=\"/receipt\">\n                <Receipt />\n              </Route>\n              <Route path=\"/product/:id\">\n                <Detail />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>              \n            </Switch>\n          </bs.Col>\n          <bs.Col md=\"2\" className=\"px-3 py-4 shadow\" style={{ backgroundColor: \"#CCCC99\"}}>\n            <RightContainer />\n          </bs.Col>\n        </bs.Row>\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0\">\n          <bs.Col className=\"px-3 py-2\" style={{ backgroundColor: \"#CC99CC\"}}>\n            <FooterContainer />\n          </bs.Col>\n        </bs.Row>\n      </bs.Container>\n    </Router>    \n  )\n}\n\nexport default App;\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport AppContext from './context'\r\nimport App from './App'\r\nimport produce from 'immer'\r\n\r\n/** The context provider for our app */\r\nexport default class AppProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {\r\n            // Functions Here\r\n            addToCart: this.addToCart,\r\n            removeFromCart: this.removeFromCart,\r\n            getCartTotal: this.getCartTotal,\r\n            clearCart: this.clearCart,\r\n        }\r\n        this.state = {\r\n            categories: [],\r\n            products: [],\r\n            cart: {},\r\n            cartCount: 0,\r\n        }\r\n        // Do not load data (the categories) here or else it would freeze the system\r\n    }\r\n\r\n    getCartTotal() {\r\n        let cartTotal = 0\r\n        Object.entries(this.cart).map(([prod, idx]) => {\r\n            let p = []\r\n            p = this.products.find(x => x.id.toString() === prod)\r\n\r\n            return cartTotal = cartTotal + (p.price * idx)\r\n        })\r\n        \r\n        return cartTotal\r\n    }\r\n\r\n    clearCart = () => {\r\n        this.setState(state => produce(state, draft => {\r\n            draft.cart = {}\r\n            draft.cartCount = 0\r\n        }))\r\n    }\r\n\r\n    addToCart = (pid) => {\r\n        //const currentQty = ....\r\n        // Inside here draft is the state\r\n        this.setState(state => produce(state, draft => {\r\n            if (pid in draft.cart) {\r\n                draft.cart[pid]++\r\n            }\r\n            else (\r\n                draft.cart[pid] = 1\r\n            )            \r\n            draft.cartCount++\r\n        }))\r\n    }\r\n\r\n    removeFromCart = (pid) => {\r\n        this.setState(state => produce(state, draft => {\r\n            delete draft.cart[pid]\r\n\r\n            draft.cartCount = 0\r\n            for (const p in draft.cart) {\r\n                let i\r\n                i = i + p\r\n                draft.cartCount++\r\n            }\r\n        }))\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{...this.state, ...this.actions}}> \r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const resp = await axios.get('/api/category/')\r\n        //console.log(resp.data)\r\n            // TURN ARRAY TO A DICTIONARY\r\n            // const cats = {}\r\n            // for (const c of resp.data) {\r\n            //     cats[c.id] = c\r\n            // }\r\n            // console.log(cats)\r\n\r\n        const resp2 = await axios.get('/api/product/')\r\n        //console.log(resp2.data)\r\n            // TURN ARRAY TO A DICTIONARY\r\n            // const prods = {}\r\n            // for (const p of resp2.data) {\r\n            //     prods[p.id] = p\r\n            // }\r\n            // console.log(prods)\r\n\r\n        this.setState({\r\n            categories: resp.data,  // This Data Type is an array\r\n            //categories: cats,\r\n            products: resp2.data,\r\n        })\r\n    }\r\n\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '@fortawesome/fontawesome-free/css/all.css';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.scss';\r\nimport AppProvider from './context-provider';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<AppProvider />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}